spring.application.name=quiz

# Render sets PORT (defaults to 10000). Locally it'll fall back to 8080.
# The ${PORT:8080} syntax tells Spring to use the 'PORT' environment variable
# (provided by Render) or fall back to 8080 if not present (for local testing).
server.port=${PORT:8080}

# --- Database Settings (Externalized for Render/Production) ---
# Render/your hosting environment will provide these values as environment variables.
spring.datasource.url=${SPRING_DATASOURCE_URL}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD}

# JPA/Hibernate settings remain the same as they are specific to your application logic.
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true

# --- Logging ---
logging.level.org.springframework.security=TRACE

# --- Admin Credentials (Externalized) ---
# It's best practice to also externalize fixed credentials like these.
admin.username=${ADMIN_USERNAME}
admin.password=${ADMIN_PASSWORD}

# --- Cloudinary Settings (Externalized) ---
# These are sensitive keys and should not be hardcoded.
cloudinary.cloud_name=${CLOUDINARY_CLOUD_NAME}
cloudinary.api_key=${CLOUDINARY_API_KEY}
cloudinary.api_secret=${CLOUDINARY_API_SECRET}

# --- Google Gemini API Key (Externalized) ---
# API keys must be externalized for security.
gemini.api.key=${GEMINI_API_KEY}
# Keeping the model name here is fine as it's typically non-sensitive and fixed.
gemini.model.name=gemini-2.5-flash

# --- File Upload Limits ---
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB